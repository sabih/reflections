Q1. How did viewing a diff between two versions of a file help you see the bug
that was introduced?

It takes less time to identify the changes between two files.
Also it is fast to identify the location where changes were made.

Q2. How could having easy access to the entire history of a file make you a
more efficient programmer in the long term?

If I want to check the previous code and if that was better than the current
one then I can go back to that version and save it.

Q3. What do you think are the pros and cons of manually choosing when to create
a commit, like you do in Git, vs having versions automatically saved,
like Google Docs does?

Pros: We can commit when all the changes are logically completed.
Cons: If the commit is made after a long change or too short then it will be
less meaningful.

Q4. Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while others, like Google Docs, treat each file
separately?

Git use commit functionality wise so each functionality can share multiple
files. Since Google Docs save versions automatically and it doesn't know the
connection between two files.

Q5. How can you use the commands git log and git diff to view the history of
files?

git log will give the history of commits done.
git diff will give the difference between two commits from history.

Q6. How might using version control make you more confident to make changes
that could break something?

If my current code break something then I can revert back to previous commit
anytime.

Q7. Now that you have your workspace set up, what do you want to try using Git
for?

Use in all my projects.
