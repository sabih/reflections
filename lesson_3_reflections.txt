Q. When would you want to use a remote repository rather than keeping all your
work local?

A. A remote repository will be useful when two persons are working together on
a project and both can push their changes on remote. Also remote repository will
be useful for security reasons for example, if local system gets corrupted then
the repository can be fetched to another system from remote.

Q. Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

A. If two persons are working on same branch and git pulls automatically the
changes pushed by another person, it might break the functionality of the person
so it is better to pull changes manually when a person is done with his/her
functionality.

Q. Describe the differences between forks, clones, and branches. When would you
use one instead of another?

A. Forks are used to copy a repository from github to github.
Clones are used to cpoy a repository from github to local and local to local.
Branches works on a single repository. We might use push and pull to a
repository but branch exist on a repository.

Q. What is the benefit of having a copy of the last known state of the remote
stored locally?

A. If the changes are done locally and in between some other user pushed the new
changes to Github then, the last known state of the remote stored locally will
help to inspect the difference between
i. local changes,
ii. the changes done by another person and
iii. previous state of remote stored locally.

In short the last known state of the remote stored in local will help in
collaboration.

Q. How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?

A. Without using Git or GitHub we can use Dropbox to share the file changes.
The easier part will be never to deal with conflicts or git commands.
But the harder part will be too hard in comparison to easier part:
The collaborators need to review whole file that another user shared and put
your changes in proper location then share back the files again.

That will be too cumbersome so Git and GitHub is very important to collaborate.

Q. When would you want to make changes in a separate branch rather than directly
in master? What benefits does each approach have?

A. For an experimental functionality, a separate branch can be created and if
it is successful then further can be merged to master.

Also it is always better to have a development branch separately if multiple
persons are working on a single project so that master branch won't break if
bad commit is pushed. Reviewer can have a look before merging into master and
also suggest some changes as per the requirement.
